/*
 * bots/bots.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.58
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Botsbotsproto);
  }
}(this, function(expect, Botsbotsproto) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CompaniesReserveRequest', function() {
      beforeEach(function() {
        instance = new Botsbotsproto.CompaniesReserveRequest();
      });

      it('should create an instance of CompaniesReserveRequest', function() {
        // TODO: update the code to test CompaniesReserveRequest
        expect(instance).to.be.a(Botsbotsproto.CompaniesReserveRequest);
      });

      it('should have the property studioId (base name: "studioId")', function() {
        // TODO: update the code to test the property studioId
        expect(instance).to.have.property('studioId');
        // expect(instance.studioId).to.be(expectedValueLiteral);
      });

      it('should have the property userId (base name: "userId")', function() {
        // TODO: update the code to test the property userId
        expect(instance).to.have.property('userId');
        // expect(instance.userId).to.be(expectedValueLiteral);
      });

      it('should have the property serviceId (base name: "serviceId")', function() {
        // TODO: update the code to test the property serviceId
        expect(instance).to.have.property('serviceId');
        // expect(instance.serviceId).to.be(expectedValueLiteral);
      });

      it('should have the property datetime (base name: "datetime")', function() {
        // TODO: update the code to test the property datetime
        expect(instance).to.have.property('datetime');
        // expect(instance.datetime).to.be(expectedValueLiteral);
      });

    });
  });

}));
